1. Make sure that port 80 isn't in use (check skype settings)
2. Download & install apache 2.2 from link https://archive.apache.org/dist/httpd/binaries/win32/ (better install to root like C:\Apache2.2 to escape blank spaces in path)
2. Download & install tomcat 6 or higher from https://tomcat.apache.org/ (better install to root). Create Environment variable "CATALINA_HOME" with path to installed tomcat.
3. Download the Apache-Tomcat Connector Module from https://archive.apache.org/dist/tomcat/tomcat-connectors/jk/binaries/win32/jk-1.2.23/. Rename the downloaded module to "mod_jk.so" and move into directory "C:\Apache2.2\modules".
4. Configure Apache to load and initialize the JK module:
   4.1 Create a configuration file called "mod_jk.conf" and place it in "C:\tomcat\conf":
   --------------------------------------
   # Load mod_jk module
   # Update this path to match your modules location
   LoadModule jk_module modules/mod_jk.so

   # Where to find workers.properties
   # Update this path to match your conf directory location
   JkWorkersFile d:/Programs/servers/apache-tomcat-6.0.45/conf/workers.properties //change to your path

   # Where to put jk logs
   # Update this path to match your logs directory location
   JkLogFile d:/Programs/servers/apache-tomcat-6.0.45/logs/mod_jk.log //change to your path

   # Set the jk log level [debug/error/info]
   JkLogLevel info

   # Select the log format
   JkLogStampFormat "[%a %b %d %H:%M:%S %Y]"

   # JkOptions indicate to send SSL KEY SIZE,
   JkOptions +ForwardKeySize +ForwardURICompat -ForwardDirectories

   # JkRequestLogFormat set the request format
   JkRequestLogFormat "%w %V %T"

   # Send everything for context /apache to worker ajp13
   JkMount /apache/* ajp13

   Alias /AP_TO $(CATALINA_HOME)/webapps/apache
   ----------------------------------------------
   4.2 Add the following include statement at the end of "C:\Apache2.2\conf\httpd.conf" file:
   -----------------------------------------------
   include d:/myproject/tomcat/conf/mod_jk.conf
   -----------------------------------------------
   4.3 Create file if not exist "workers.properties" and fill in:
   -----------------------------------------------
   # Define 1 real worker named ajp13
   worker.list=ajp13

   workrs.tomcat_home=$(CATALINA_HOME)
   workers.java_home=$(JAVA_HOME)
   ps=/

   # Set properties for worker named ajp13 to use ajp13 protocol,
   # and run on port 8009
   worker.ajp13.type=ajp13
   worker.ajp13.host=localhost
   worker.ajp13.port=8009
   worker.ajp13.lbfactor=50
   worker.ajp13.cachesize=10
   worker.ajp13.cache_timeout=600
   worker.ajp13.socket_keepalive=1
   worker.ajp13.socket_timeout=300
   -----------------------------------------------
5. Configure Tomcat - The default configuration in Tomcat's "conf\server.xml" starts the AJP1.3 service via the following configuration, on TCP port 8009 (remove the comments if these lines are commented out).
   -----------------------------------------------
   <!-- Define an AJP 1.3 Connector on port 8009 -->
   <Connector port="8009" enableLookups="false" redirectPort="8443" protocol="AJP/1.3" />
   -----------------------------------------------
6. Copy ws folder from "AP_TO\src\main\resources\" to "C:\Apache2.2\htdocs"
7. Open C:\Apache2.2\conf\httpd.conf and put additional settings:
   -----------------------------------------------
   <Directory "C:/Apache2.2/htdocs/ws">
   	Options Indexes FollowSymLinks
       AllowOverride None
       Order allow,deny
       Allow from all
   	DirectoryIndex index.html
   </Directory>

   <Directory "C:/Apache2.2/htdocs/ws/img">
   	Options Indexes FollowSymLinks
       AllowOverride None
       Order allow,deny
       Allow from all
   	DirectoryIndex cat.png
   </Directory>

   <IfModule alias_module>
       Alias /ws/ "C:/Apache2.2/htdocs/ws/"
   </IfModule>
   -----------------------------------------------
8. Build AP_TO app with maven and put apache.war to Tomcat webapps folder or use Tomacat manager for deploying.
9. Start Tomcat
10. Start Apache
11. Use http://localhost/apache/hello link to reach web app.